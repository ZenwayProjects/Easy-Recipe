[{"C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\index.js":"1","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\App.js":"2","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Pages\\Home\\HomePage.js":"3","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Pages\\Recipes\\RecipesPage.js":"4","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Pages\\SelectedRecipe\\SelectedRecipePage.js":"5","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\SelectedRecipePage\\SelectedRecipe.js":"6","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\Global\\Nav.js":"7","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\Menu.js":"8","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\IngredientsToUse.js":"9","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\Category.js":"10","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\IngredientItem.js":"11","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\MenuItem.js":"12","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\SelectedFoods.js":"13","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\PossibleRecipesPage\\Recipe.js":"14","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\PossibleRecipesPage\\Carousel\\PossibleRecipesCarousel.js":"15","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\Global\\AlterNav.js":"16","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\UserManual\\UserManual.js":"17","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\PossibleRecipesPage\\Pagination\\RecipesPagination.js":"18","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\PossibleRecipesPage\\Pagination\\RecipeTag.js":"19","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\PossibleRecipesPage\\FoodsNotFound.js":"20"},{"size":197,"mtime":1640300072183,"results":"21","hashOfConfig":"22"},{"size":784,"mtime":1654514602769,"results":"23","hashOfConfig":"22"},{"size":1377,"mtime":1645993509693,"results":"24","hashOfConfig":"22"},{"size":2383,"mtime":1645993509692,"results":"25","hashOfConfig":"22"},{"size":761,"mtime":1645993509692,"results":"26","hashOfConfig":"22"},{"size":8260,"mtime":1645992878063,"results":"27","hashOfConfig":"22"},{"size":1247,"mtime":1645993206037,"results":"28","hashOfConfig":"22"},{"size":1584,"mtime":1645993458349,"results":"29","hashOfConfig":"22"},{"size":1228,"mtime":1645993458355,"results":"30","hashOfConfig":"22"},{"size":1368,"mtime":1645993458508,"results":"31","hashOfConfig":"22"},{"size":245,"mtime":1645993458507,"results":"32","hashOfConfig":"22"},{"size":819,"mtime":1645993458349,"results":"33","hashOfConfig":"22"},{"size":1121,"mtime":1644786093952,"results":"34","hashOfConfig":"22"},{"size":628,"mtime":1641689836349,"results":"35","hashOfConfig":"36"},{"size":964,"mtime":1641688279487,"results":"37","hashOfConfig":"36"},{"size":575,"mtime":1642631398581,"results":"38","hashOfConfig":"22"},{"size":8744,"mtime":1645379802378,"results":"39","hashOfConfig":"22"},{"size":3520,"mtime":1644785289042,"results":"40","hashOfConfig":"22"},{"size":1151,"mtime":1644785121928,"results":"41","hashOfConfig":"22"},{"size":959,"mtime":1644781667593,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"60meh8",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"100w50k",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"45"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"45"},"C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\index.js",[],["98","99"],"C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\App.js",["100","101"],"import React from 'react';\r\nimport './App.css';\r\nimport HomePage from './Pages/Home/HomePage';\r\nimport RecipesPage from './Pages/Recipes/RecipesPage';\r\nimport SelectedRecipePage from './Pages/SelectedRecipe/SelectedRecipePage';\r\nimport UserManual from './Components/UserManual/UserManual';\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nclass App extends React.Component{\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/homepage\" component={HomePage}/> \r\n            <Route path=\"/recipes\" component={RecipesPage}/>\r\n            <Redirect exact from = \"/\" to=\"/homepage\"/>\r\n          </Switch>\r\n        </Router>\r\n      </div> \r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Pages\\Home\\HomePage.js",[],"C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Pages\\Recipes\\RecipesPage.js",["102","103","104","105","106"],"import AlterNav from \"../../Components/Global/AlterNav\";\r\nimport SelectedFoods from \"../../Components/HomePage/SelectedFoods\";\r\nimport RecipesPagination from \"../../Components/PossibleRecipesPage/Pagination/RecipesPagination\";\r\nimport FoodsNotFound from \"../../Components/PossibleRecipesPage/FoodsNotFound\";\r\n\r\nimport {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst RecipesPage = (props) =>{\r\n\r\n        const prove = true;\r\n        const selectedFoods = props.location.state; // lo mismo que tener -> const {state} = this.props.location;\r\n        console.log(selectedFoods);\r\n        const [possibleRecipes, setPossibleRecipes] = useState([]);\r\n\r\n        /* Create an array with the Id's of the foods selected */\r\n        let foodsId = [];\r\n        selectedFoods.map((food) => {\r\n                return(\r\n                    foodsId = [...foodsId, food.Id]\r\n                )\r\n        })\r\n\r\n        /* Let's send de Id's to the backend... */\r\n        useEffect(() => {\r\n            Axios.get(\"http://localhost:3001/api/getPossibleRecipesId\", {params:foodsId}).then((response) => {\r\n                let result = response.data;\r\n                let newArray = [];\r\n\r\n                /* This will execute after the backend finish the operation */\r\n                result.map((ids, i) => {\r\n                    ids.map((item) => {\r\n                        newArray = [...newArray, item];\r\n                    })\r\n\r\n                    if(result.length === i+1){\r\n                            newArray = newArray.filter((item2, index) => {\r\n                            return newArray.indexOf(item2) === index;\r\n                        })\r\n\r\n                        setPossibleRecipes(newArray);\r\n\r\n                    }\r\n                    \r\n                })\r\n            })\r\n        }, [])\r\n\r\n        if(selectedFoods.length == 0){\r\n            return(\r\n                <div>\r\n                    <FoodsNotFound/>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n\r\n            return(\r\n                <>\r\n                    <div>\r\n                        <AlterNav/>\r\n                        <SelectedFoods selectedFoods={selectedFoods}/>\r\n                        <RecipesPagination possibleRecipes={possibleRecipes}/>\r\n                    </div>\r\n                </>\r\n                )\r\n\r\n        }\r\n\r\n}\r\n\r\n\r\n \r\nexport default RecipesPage;","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Pages\\SelectedRecipe\\SelectedRecipePage.js",["107"],"import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport AlterNav from '../../Components/Global/AlterNav';\r\nimport SelectedRecipe from '../../Components/SelectedRecipePage/SelectedRecipe';\r\n\r\n\r\nconst SelectedRecipePage = (props) => {\r\n\r\n   const[recipeData, setRecipeData] = useState([]);\r\n   const Name = props.location.state;\r\n\r\n   useEffect(() => {\r\n      Axios.get(\"http://localhost:3001/api/selected-recipe\", {params:{Name:Name}}).then((response) => {\r\n         setRecipeData(response.data);\r\n         })\r\n   }, [])\r\n\r\n\r\n    return ( \r\n        <div className='selected-recipe-template'>\r\n           <AlterNav />\r\n           <SelectedRecipe recipeData={recipeData}/>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SelectedRecipePage;","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\SelectedRecipePage\\SelectedRecipe.js",["108","109"],"import '../Css/SelectedRecipePage/SelectedRecipe.css';\r\n\r\nconst SelectedRecipe = (props) => {\r\n\r\n    let toSend = \"\";\r\n\r\n    function separateIngredients(ingredients){\r\n        let ingredientItem = ingredients.split(\"-\");\r\n\r\n        for(let j = 1; j<ingredientItem.length; j++){\r\n            ingredientItem[j] = \"- \"+ingredientItem[j]+\"<br/>\";\r\n            toSend += ingredientItem[j];\r\n        }\r\n    }\r\n\r\n    const Dividir = (text) => {\r\n        console.log(text)\r\n        let numeroIndicado = 5  ;\r\n        let nextNumero = numeroIndicado +1;\r\n        let beforeNumero = numeroIndicado-1;\r\n        let textoArreglado=[];\r\n        let splitNumber;\r\n        let secciones=\"\";\r\n        let seccion;\r\n     \r\n        do{\r\n          secciones = text.split(numeroIndicado + \".\");\r\n\r\n           if(secciones.length >= 2){\r\n            \r\n              if(text.split(nextNumero + \".\") == 1){\r\n               numeroIndicado++;\r\n                break;\r\n              } else {\r\n                 numeroIndicado = nextNumero;\r\n                 nextNumero++;\r\n              }\r\n            \r\n           } else{\r\n              splitNumber = text.split(beforeNumero + \".\");\r\n              console.log(splitNumber.length);\r\n              if( splitNumber == 1){\r\n                 numeroIndicado = beforeNumero;\r\n                 beforeNumero--;\r\n              } else {\r\n                 numeroIndicado--;\r\n                 break;\r\n              }\r\n           }\r\n\r\n        }while(true);\r\n        \r\n        for(var i=1; i <= numeroIndicado; i++){\r\n            seccion = text.split(i+\".\");\r\n            textoArreglado = [...textoArreglado, seccion[0]];\r\n            text = text.replace(seccion[0], '');\r\n        }\r\n\r\n        textoArreglado = [...textoArreglado, numeroIndicado + '. ' +seccion[1]];\r\n             \r\n        return textoArreglado;\r\n     }\r\n\r\n    return(\r\n            <div className=\"selected-recipe\">\r\n                <div className='main'>\r\n                    <div className='recipe-title-zone'>\r\n                        <div className='section section00'>\r\n                                <div className=\"recipe-title\">\r\n                                    {\r\n                                        props.recipeData.map((selectedRecipe) => {\r\n                                            return(\r\n                                                <p className='recipe-title'>{selectedRecipe.Name}</p>\r\n                                            );\r\n                                        })\r\n                                    } \r\n                                </div>   \r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    \r\n\r\n                    <div className='recipe-params-zone'>\r\n                        <div className='section section05'>\r\n                            <div className=\"recipe-time\">\r\n                                {\r\n                                    props.recipeData.map((selectedRecipe) => {\r\n                                        return(\r\n                                            <div>\r\n                                                <p className='subtitle'>Prepara esta receta en: </p>\r\n                                                <h3>{selectedRecipe.Time}</h3>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                } \r\n                            </div>   \r\n                        </div>\r\n\r\n                        <div className='section section06'>\r\n                            <div className=\"recipe-difficulty\">\r\n                                {\r\n                                    props.recipeData.map((selectedRecipe) => {\r\n                                        return(\r\n                                            <div>\r\n                                                <p className='subtitle'>Dificultad: </p>\r\n                                                <h3>{selectedRecipe.Difficulty}</h3>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                } \r\n                            </div> \r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className='recipe-content-zone'>\r\n                        <div className='section section01'>\r\n                            <div className=\"recipe-ingredients\">\r\n                                {\r\n                                    props.recipeData.map((selectedRecipe) => {\r\n                                        return(\r\n                                            <div>\r\n                                                <p className='subtitle'>Ingredientes: </p>\r\n                                                {separateIngredients(selectedRecipe.IngredientsList)}\r\n                                                <h3 className='ingredient-item' dangerouslySetInnerHTML={{__html: toSend}}></h3>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                } \r\n                            </div>   \r\n                        </div>\r\n\r\n                        <div className='section section02'>\r\n                            <div className=\"recipe-content\">\r\n                                {\r\n                                    props.recipeData.map((selectedRecipe) => {\r\n                                        return(\r\n                                            <div>\r\n                                                <p className='subtitle'>Guía de preparación:</p>\r\n                                                <h3>{Dividir(selectedRecipe.RecipeContent).map((paso)=> {\r\n                                                        return(\r\n                                                            <div>\r\n                                                                <h3>{paso}</h3><br/>\r\n                                                            </div>\r\n                                                        );\r\n                                                    })}</h3>\r\n                                                <div className='iframe-container'>\r\n                                                    <iframe width=\"560\" height=\"315\" src={selectedRecipe.Url} title=\"YouTube video player\"  frameBorder=\"0\" \r\n                                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                } \r\n                            </div>   \r\n                        </div>\r\n\r\n                        <div className='section section03'>\r\n                            <div className=\"recipe-info\">\r\n                                {\r\n                                    props.recipeData.map((selectedRecipe) => {\r\n                                        return(\r\n                                            <div>\r\n                                                <p className='subtitle'>Nacionalidad: </p>\r\n                                                <h3>{selectedRecipe.Nacionality}</h3>\r\n                                                <p className='subtitle'>Datos de interés: </p>\r\n                                                <h3>{selectedRecipe.GeneralDescription}</h3>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                } \r\n                            </div>   \r\n                        </div>\r\n\r\n                        <div className='section section04'>\r\n                            <div className=\"ad-content\">\r\n                                <p className='subtitle'>Esto podría interesarte:</p>\r\n                            </div>   \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SelectedRecipe;","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\Global\\Nav.js",["110","111","112"],"import logo from \"../Images/logo.png\";\r\nimport '../Css/Global/Nav.css';\r\nimport ham from \"../Images/ham-negro.png\";\r\nimport searchIcon from \"../Images/icono-busqueda.png\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Nav = ({openCategory, setOpenCategory}) => {\r\n\r\n  let history = useHistory();\r\n\r\n    function openAside(){\r\n     \r\n      setOpenCategory({\r\n        ...openCategory,\r\n        open: !openCategory.open\r\n      })\r\n    }\r\n\r\n    return (\r\n      \r\n\r\n        <div style={{height:\"70px\"}}>\r\n          <header className=\"nav\">\r\n            <div className=\"left\">\r\n              <img  className=\"logo\" src={logo} onClick={() => {history.push('/')}}/>\r\n              <div className=\"title-container\"><span className=\"title\">Easy Recipe</span></div>\r\n            </div>\r\n            \r\n            <div className=\"right\">\r\n              <label className=\"logo-ham\" onClick={()=>openAside()}><img  className=\"logo-ham-img\"src={ham}></img ></label>\r\n              <div class=\"link-user-manual\" onClick={() => {history.push('/user-manual')}}>\r\n                <span>¿Cómo usar Easy Recipe?</span>\r\n              </div>\r\n            </div>\r\n          </header>\r\n        </div>\r\n\r\n        \r\n        \r\n     );\r\n}\r\n \r\nexport default Nav;","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\Menu.js",["113"],"import React, {Component} from 'react';\r\nimport Category from \"./Category\";\r\nimport \"../Css/HomePage/Menu.css\";\r\n\r\n\r\nclass Menu extends Component{\r\n\r\n    render(){\r\n        let arrayFoods = [{}];\r\n        let foodsTableArray = this.props.foodsFromDB ; //.filter((item) => item.IdCategory !== 1 );\r\n\r\n\r\n       const filterFoods = (item) => {\r\n\r\n            foodsTableArray.map((food)=> {\r\n                if(food.IdCategory === item){\r\n                    // las categorias coinciden\r\n                    arrayFoods = [...arrayFoods, {Name:food.Name, Id:food.IdFood}];\r\n                    foodsTableArray = foodsTableArray.filter((itemFood) => itemFood.IdCategory !== item);\r\n                }\r\n            })\r\n        }\r\n\r\n        \r\n        return(\r\n            <div className=\"contenedor-Category\" id={this.props.openCategory.open === true? 'ampliar':'reducir'}>\r\n                <div className=\"menuTittle\">\r\n                    <span>¿Qué alimentos tienes disponibles? {this.props.openCategory.open}</span>\r\n                </div>\r\n\r\n                {this.props.categoriesFromDB.map((item)=> {\r\n                    arrayFoods = [];\r\n                    filterFoods(item.IdCategory);\r\n                    return(       \r\n                        <div>\r\n                            <Category name={item.Name} currentFoods={this.props.currentFoods} setCurrentFoods={this.props.setCurrentFoods} items={arrayFoods}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )    \r\n    }\r\n       \r\n        \r\n    \r\n}\r\nexport default Menu;","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\IngredientsToUse.js",[],"C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\Category.js",["114"],"import MenuItem from \"./MenuItem\";\r\nimport React, {Component} from 'react';\r\nimport \"../Css/HomePage/Category.css\";\r\nimport suma from \"../Images/suma-icon.png\";\r\nimport resta from \"../Images/resta-icon.png\";\r\n\r\nclass category extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    handleClick(event){\r\n        event.preventDefault();\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"a\">\r\n                <div className=\"category\" onClick={this.handleClick.bind(this)}>\r\n                    <div className=\"icon-container\"><img className=\"icon-category\" src={this.state.visible? resta:suma}></img></div>\r\n                    <h3>{this.props.name}</h3>\r\n                </div>\r\n            \r\n                <ul className={this.state.visible?'visible':'no-visible'}>\r\n                    {this.props.items.map((item)=> {\r\n                        return(\r\n                            <MenuItem name={item.Name} idFood={item.Id}  currentFoods={this.props.currentFoods} setCurrentFoods={this.props.setCurrentFoods} key={item.IdFood}/>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default category;","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\IngredientItem.js",[],"C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\MenuItem.js",[],["115","116"],"C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\HomePage\\SelectedFoods.js",[],"C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\PossibleRecipesPage\\Recipe.js",[],["117","118"],"C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\PossibleRecipesPage\\Carousel\\PossibleRecipesCarousel.js",[],"C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\Global\\AlterNav.js",["119"],"import logo from \"../Images/logo.png\";\nimport '../Css/Global/AlterNav.css';\nimport { useHistory } from 'react-router-dom';\n\nconst AlterNav = () => {\n\n  let history = useHistory();\n\n    return (\n\n        <div style={{height:\"70px\"}}>\n          <header className=\"nav\">\n            <div className=\"left\">\n              <img  className=\"logo\" src={logo} onClick={() => {history.push('/')}}/>\n              <div className=\"title-container\"><span className=\"title\">Easy Recipe</span></div>\n            </div>\n          </header>\n        </div>\n     );\n}\n \nexport default AlterNav;","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\UserManual\\UserManual.js",["120","121","122","123","124","125","126","127","128","129"],"import '../Css/UserManual/UserManual.css';\r\n\r\nimport AlterNav from \"../Global/AlterNav\";\r\n\r\nimport step01 from '../../Images/UserManual/1.PNG';\r\nimport step02 from '../../Images/UserManual/2.PNG';\r\nimport step03 from '../../Images/UserManual/3.PNG';\r\nimport step04 from '../../Images/UserManual/4.PNG';\r\nimport step05 from '../../Images/UserManual/5.PNG';\r\nimport step06 from '../../Images/UserManual/6.PNG';\r\nimport step07 from '../../Images/UserManual/7.png';\r\nimport step08 from '../../Images/UserManual/8.PNG';\r\nimport step09 from '../../Images/UserManual/9.PNG';\r\nimport step10 from '../../Images/UserManual/10.PNG';\r\n\r\nconst UserManual = () => {\r\n    return(\r\n        <div>\r\n            <AlterNav />\r\n            <div className=\"user-manual-content\">\r\n                <p className=\"user-manual-title\">¡Hola cocineros!</p>\r\n\r\n                <div className=\"user-manual-steps\">\r\n                    <p className=\"first-explanation\">\r\n                        El equipo de Easy Recipe ha decidido preparar un manual para que tú, cocinero o cocinera\r\n                        aprendas los principios básicos de utilización del aplicativo.<br/>\r\n                        A continuación, y mediante una serie de pasos podrás ver detalladamente cómo utilizar Easy Recipe de la forma más eficiente posible:\r\n                    </p>\r\n\r\n                    <div className=\"step step01\">\r\n                        <p className='step-title'>Paso 01: </p>\r\n                        <p className='step-content'>\r\n                            Esta es la página inicial de Easy Recipe, vamos a empezar a familiarizarnos con los diferentes componentes:\r\n                        </p>\r\n                        <div className='step-image-content'>\r\n                            <img src={step01} className='step-img'/>\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"step step02\">\r\n                        <p className='step-title'>Paso 02: </p>\r\n                        <p className='step-content'>\r\n                            Para empezar a explorar las múltiples recetas que Easy Recipe tiene para ofrecerte haz click sobre el ícono de menú como se puede ver en la \r\n                            imagen.<br/>\r\n                            Realizar esta acción pondrá a tu disposición las categorías disponibles como sus alimentos correspondientes.\r\n                        </p>\r\n                        <div className='step-image-content'>\r\n                            <img src={step02} className='step-img'/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"step step03\">\r\n                        <p className='step-title'>Paso 03: </p>\r\n                        <p className='step-content'>\r\n                            A continuación, debes hacer click sobre la categoría de la cual quieres seleccionar tus alimentos a disposición.<br/>\r\n                            Esta acción desplegará los alimentos correspondientes de la categoría seleccionada.\r\n                        </p>\r\n                        <div className='step-image-content'>\r\n                            <img src={step03} className='step03-img'/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"step step04\">\r\n                        <p className='step-title'>Paso 04: </p>\r\n                        <p className='step-content'>\r\n                            Sub paso 01: Como puedes ver en la imagen, haciendo click sobre la casilla correspondiente al alimento del que dispongas\r\n                            lo agregarás a tu lista de preparación. Así mismo, si desmarcas la casilla correspondiente lo eliminarás de tu lista\r\n                            de preparación.<br/><br/>\r\n                            Sub paso 02: Aquí podrás tener constancia de los alimentos que has agregado a tu lista hasta el momento.<br/><br/> \r\n                            Sub paso 03: Si haces click sobre el botón \"¡Vamos a cocinar!\", el sistema almacenará tus alimentos seleccionados y realizará una búsqueda en la \r\n                            base de datos según tus elecciones.\r\n                        </p>\r\n                        <div className='step-image-content'>\r\n                            <img src={step04} className='step-img'/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"step step05\">\r\n                        <p className='step-title'>Paso 05: </p>\r\n                        <p className='step-content'>\r\n                            Una vez realizada la búsqueda, se te pondrá a disposición de una manera muy cómoda, todas las recetas que contengan al menos uno \r\n                            de los alimentos que tienes a disposición.\r\n                        </p>\r\n                        <div className='step-image-content'>\r\n                            <img src={step05} className='step-img'/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"step step06\">\r\n                        <p className='step-title'>Paso 06: </p>\r\n                        <p className='step-content'>\r\n                            Puedes cambiar entre pestañas para navegar por las diferentes recetas encontradas.\r\n                        </p>\r\n                        <div className='step-image-content'>\r\n                            <img src={step06} className='step-img'/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"step step07\">\r\n                        <p className='step-title'>Paso 07: </p>\r\n                        <p className='step-content'>\r\n                            Una vez hagas click sobre el campo de la receta que te apetezca cocinar, ingresarás en la página personalizada de dicha receta.\r\n                        </p>\r\n                        <div className='step-image-content'>\r\n                            <img src={step07} className='step-img'/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"step step08\">\r\n                        <p className='step-title'>Paso 08: </p>\r\n                        <p className='step-content'>\r\n                            Una vez dentro de la página de la receta seleccionada, podrás ver el nombre de la receta (01), el tiempo de preparación (02), la dificultad para \r\n                            cocinar (03), el paso a paso para la preparación de la misma (04) y los ingredientes que la componen (05).\r\n                        </p>\r\n                        <div className='step-image-content'>\r\n                            <img src={step08} className='step-img'/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"step step09\">\r\n                        <p className='step-title'>Paso 09: </p>\r\n                        <p className='step-content'>\r\n                            Si navegas un poco más podrás conocer la nacionalidad y algunos datos de interés de la receta seleccionada (06).\r\n                        </p>\r\n                        <div className='step-image-content'>\r\n                            <img src={step09} className='step-img'/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"step step10\">\r\n                        <p className='step-title'>Paso 10: </p>\r\n                        <p className='step-content'>\r\n                            En la parte inferior de la página podrás encontrar publicidad relacionada a la receta en cuestión (07)\r\n                            y un video correspondiente a la receta seleccionada (08).\r\n                            <br/>\r\n                            POSDATA: No todas las recetas contienen video explicativo.\r\n                        </p>\r\n                        <div className='step-image-content'>\r\n                            <img src={step10} className='step-img'/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"step step-final\">\r\n                        <p className='step-content'>\r\n                            Esperamos haber sido lo más intuitivos posibles y que disfrutes de la magia del cocinar mientras aprendes cada día.\r\n                        </p>\r\n                    </div>\r\n    \r\n                </div>\r\n\r\n                <div className=\"user-manual-footer\">\r\n                    <p className='footer-content'>Easy Recipe Team, 2022. Todos los derechos reservados.</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default UserManual;","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\PossibleRecipesPage\\Pagination\\RecipesPagination.js",["130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"import \"../../Css/PossibleRecipesPage/Pagination/RecipesPagination.css\";\r\nimport Axios from 'axios';\r\nimport { useEffect, useLayoutEffect, useState} from 'react';\r\nimport RecipeTag from \"./RecipeTag\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst RecipesPagination = (props) => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageNumberLimit, setPageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\r\n    const [minxPageNumberLimit, setMinPageNumberLimit] = useState(0);\r\n    const [itemsPerPage, setItemsPerPage] = useState(6);\r\n    const possibleRecipes = props.possibleRecipes;\r\n    const pages = [];\r\n\r\n    let pageIncrementBtn = null;\r\n    if (pages.length > maxPageNumberLimit){\r\n        pageIncrementBtn = <li onClick={handleNextBtn}> &hellip; </li>\r\n    }\r\n\r\n    let pageDecrementBtn = null;\r\n    if (pages.length > maxPageNumberLimit){\r\n        pageDecrementBtn = <li onClick={handlePrevBtn}> &hellip; </li>\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setCurrentPage(Number(event.target.id));\r\n    \r\n    } \r\n\r\n\r\n    const handleNextBtn = () => {\r\n        setCurrentPage(currentPage+1);\r\n        if (currentPage+1 > maxPageNumberLimit){\r\n            setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setMinPageNumberLimit(minxPageNumberLimit+ pageNumberLimit);\r\n        }\r\n    }\r\n    const handlePrevBtn = () => {\r\n        setCurrentPage(currentPage-1);\r\n        if ((currentPage-1)%pageNumberLimit == 0 ){\r\n            setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n            setMinPageNumberLimit(minxPageNumberLimit- pageNumberLimit);\r\n        }\r\n    }\r\n\r\n    const renderData = (data) => {\r\n        return(\r\n            <div className=\"content-Container\">\r\n                {currentItems.map((todo,index) => {\r\n                    return(\r\n                        <>\r\n                            <RecipeTag key={index} todo={todo}/>\r\n                        </>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    for (let i=1; i <= Math.ceil(possibleRecipes.length/itemsPerPage); i++){\r\n        pages.push(i);\r\n        \r\n    };\r\n\r\n    const renderPageNumbers = pages.map((number) =>  {\r\n    if(number < maxPageNumberLimit+1 && number > minxPageNumberLimit){\r\n        return(\r\n        <li key={number} id={number} onClick={handleClick}\r\n        className={currentPage == number ? \"active li\" : \"li\"} >\r\n            {number}\r\n        </li>);} else {\r\n            return null;\r\n        }\r\n    });\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = possibleRecipes.slice(indexOfFirstItem, indexOfLastItem); \r\n    \r\n\r\n        return ( \r\n            <div className=\"RecipesPagination-Container\">\r\n                \r\n                    {renderData(currentItems)}\r\n                \r\n                    <div className=\"pagination\">\r\n                        <ul className=\"pageNumbers\"> \r\n                            <li><button onClick={handlePrevBtn} disabled={currentPage == pages[0] ? true : false}>prev</button></li>\r\n                            {renderPageNumbers}\r\n                            <li><button onClick={handleNextBtn} disabled={currentPage == pages[pages.length-1] ? true : false}>next</button></li>\r\n                        </ul>\r\n                    </div>\r\n\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default RecipesPagination;","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\PossibleRecipesPage\\Pagination\\RecipeTag.js",["144"],"import \"../../Css/PossibleRecipesPage/Pagination/RecipeTag.css\";\r\nimport { useState } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst RecipeTag = (props) => {\r\n\r\n      const [hide, setHide] = useState(false);     \r\n\r\n      const onMouseEnter = () => {\r\n            setHide(true);\r\n      }\r\n\r\n      const onMouseLeave = () => {\r\n            setHide(false);      \r\n      }\r\n\r\n    return (\r\n        <>\r\n            <Link className=\"link-to-recipe\" to={{pathname:\"/selected-recipe\", state:props.todo.Name}}>\r\n                  <div className=\"RecipeTag-Container\" onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n                        <h3 className=\"RecipeTag-Tittle\">{props.todo.Name} </h3>\r\n                        <p className=\"RecipeTag-GeneralDescription\">{props.todo.GeneralDescription}</p> \r\n                        <div className=\"RecipeTag-GradiantLayer\"></div>\r\n                        <div  className=\"ima\" id={hide == true?'hidding':'no-hidding'} style={{backgroundImage : `url(${props.todo.IconPath})`}} ></div>\r\n                  </div>\r\n            </Link>\r\n        </>\r\n\r\n      );\r\n}\r\n \r\nexport default RecipeTag;","C:\\Courses\\MERNStackCourses\\ReactCourse\\EasyRecipe-develop\\frontend\\src\\Components\\PossibleRecipesPage\\FoodsNotFound.js",["145"],"import '../Css/PossibleRecipesPage/FoodsNotFound.css';\r\nimport AlterNav from '../Global/AlterNav';\r\nimport SadFace from '../../Images/NotFoundFoods/sad-face.png';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst FoodsNotFound = () =>{\r\n\r\n    let history = useHistory();\r\n\r\n    return(\r\n        <div className=''>\r\n            <AlterNav />\r\n            <div className='fnf-content'>\r\n                <div className='fnf-image-content'>\r\n                    <img className='fnf-image' src={SadFace}/>\r\n                </div>\r\n                <p className=\"fnf-message\">Lo sentimos, no has seleccionado ningún alimento sobre el cual podamos realizar una búsqueda. Inténtalo de nuevo, por favor.</p>\r\n                <div class=\"back-home\" onClick={() => {history.push('/homepage')}}>\r\n                    <span>Volver a la página inicial</span>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default FoodsNotFound;",{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":26},{"ruleId":"150","severity":1,"message":"154","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":18},{"ruleId":"150","severity":1,"message":"155","line":11,"column":15,"nodeType":"152","messageId":"153","endLine":11,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":31,"column":37,"nodeType":"158","messageId":"159","endLine":31,"endColumn":39},{"ruleId":"156","severity":1,"message":"157","line":32,"column":36,"nodeType":"158","messageId":"159","endLine":32,"endColumn":38},{"ruleId":"160","severity":1,"message":"161","line":47,"column":12,"nodeType":"162","endLine":47,"endColumn":14,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":49,"column":33,"nodeType":"166","messageId":"167","endLine":49,"endColumn":35},{"ruleId":"160","severity":1,"message":"168","line":17,"column":7,"nodeType":"162","endLine":17,"endColumn":9,"suggestions":"169"},{"ruleId":"164","severity":1,"message":"165","line":31,"column":47,"nodeType":"166","messageId":"167","endLine":31,"endColumn":49},{"ruleId":"164","severity":1,"message":"165","line":42,"column":31,"nodeType":"166","messageId":"167","endLine":42,"endColumn":33},{"ruleId":"150","severity":1,"message":"170","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":25,"column":15,"nodeType":"173","endLine":25,"endColumn":86},{"ruleId":"171","severity":1,"message":"172","line":30,"column":69,"nodeType":"173","endLine":30,"endColumn":109},{"ruleId":"156","severity":1,"message":"157","line":15,"column":39,"nodeType":"158","messageId":"159","endLine":15,"endColumn":41},{"ruleId":"171","severity":1,"message":"172","line":27,"column":53,"nodeType":"173","endLine":27,"endColumn":121},{"ruleId":"146","replacedBy":"174"},{"ruleId":"148","replacedBy":"175"},{"ruleId":"146","replacedBy":"176"},{"ruleId":"148","replacedBy":"177"},{"ruleId":"171","severity":1,"message":"172","line":14,"column":15,"nodeType":"173","endLine":14,"endColumn":86},{"ruleId":"171","severity":1,"message":"172","line":36,"column":29,"nodeType":"173","endLine":36,"endColumn":69},{"ruleId":"171","severity":1,"message":"172","line":49,"column":29,"nodeType":"173","endLine":49,"endColumn":69},{"ruleId":"171","severity":1,"message":"172","line":60,"column":29,"nodeType":"173","endLine":60,"endColumn":71},{"ruleId":"171","severity":1,"message":"172","line":75,"column":29,"nodeType":"173","endLine":75,"endColumn":69},{"ruleId":"171","severity":1,"message":"172","line":86,"column":29,"nodeType":"173","endLine":86,"endColumn":69},{"ruleId":"171","severity":1,"message":"172","line":96,"column":29,"nodeType":"173","endLine":96,"endColumn":69},{"ruleId":"171","severity":1,"message":"172","line":106,"column":29,"nodeType":"173","endLine":106,"endColumn":69},{"ruleId":"171","severity":1,"message":"172","line":117,"column":29,"nodeType":"173","endLine":117,"endColumn":69},{"ruleId":"171","severity":1,"message":"172","line":127,"column":29,"nodeType":"173","endLine":127,"endColumn":69},{"ruleId":"171","severity":1,"message":"172","line":140,"column":29,"nodeType":"173","endLine":140,"endColumn":69},{"ruleId":"150","severity":1,"message":"178","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"179","line":3,"column":10,"nodeType":"152","messageId":"153","endLine":3,"endColumn":19},{"ruleId":"150","severity":1,"message":"180","line":3,"column":21,"nodeType":"152","messageId":"153","endLine":3,"endColumn":36},{"ruleId":"150","severity":1,"message":"181","line":5,"column":9,"nodeType":"152","messageId":"153","endLine":5,"endColumn":13},{"ruleId":"150","severity":1,"message":"182","line":11,"column":29,"nodeType":"152","messageId":"153","endLine":11,"endColumn":47},{"ruleId":"150","severity":1,"message":"183","line":14,"column":26,"nodeType":"152","messageId":"153","endLine":14,"endColumn":41},{"ruleId":"150","severity":1,"message":"184","line":20,"column":9,"nodeType":"152","messageId":"153","endLine":20,"endColumn":25},{"ruleId":"185","severity":1,"message":"186","line":20,"column":41,"nodeType":"152","messageId":"187","endLine":20,"endColumn":54},{"ruleId":"150","severity":1,"message":"188","line":25,"column":9,"nodeType":"152","messageId":"153","endLine":25,"endColumn":25},{"ruleId":"185","severity":1,"message":"189","line":25,"column":41,"nodeType":"152","messageId":"187","endLine":25,"endColumn":54},{"ruleId":"164","severity":1,"message":"165","line":43,"column":45,"nodeType":"166","messageId":"167","endLine":43,"endColumn":47},{"ruleId":"164","severity":1,"message":"165","line":72,"column":32,"nodeType":"166","messageId":"167","endLine":72,"endColumn":34},{"ruleId":"164","severity":1,"message":"165","line":91,"column":87,"nodeType":"166","messageId":"167","endLine":91,"endColumn":89},{"ruleId":"164","severity":1,"message":"165","line":93,"column":87,"nodeType":"166","messageId":"167","endLine":93,"endColumn":89},{"ruleId":"164","severity":1,"message":"165","line":24,"column":56,"nodeType":"166","messageId":"167","endLine":24,"endColumn":58},{"ruleId":"171","severity":1,"message":"172","line":16,"column":21,"nodeType":"173","endLine":16,"endColumn":63},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'SelectedRecipePage' is defined but never used.","Identifier","unusedVar","'UserManual' is defined but never used.","'prove' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'foodsId'. Either include it or remove the dependency array.","ArrayExpression",["192"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'Name'. Either include it or remove the dependency array.",["193"],"'searchIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["190"],["191"],["190"],["191"],"'Axios' is defined but never used.","'useEffect' is defined but never used.","'useLayoutEffect' is defined but never used.","'Link' is defined but never used.","'setPageNumberLimit' is assigned a value but never used.","'setItemsPerPage' is assigned a value but never used.","'pageIncrementBtn' is assigned a value but never used.","no-use-before-define","'handleNextBtn' was used before it was defined.","usedBeforeDefined","'pageDecrementBtn' is assigned a value but never used.","'handlePrevBtn' was used before it was defined.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [foodsId]",{"range":"198","text":"199"},"Update the dependencies array to be: [Name]",{"range":"200","text":"201"},[1810,1812],"[foodsId]",[541,543],"[Name]"]